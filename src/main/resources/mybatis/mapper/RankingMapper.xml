<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.eilieili.demo.mapper.RankingMapper">

    <select id="getRankingById" resultType="com.springboot.eilieili.demo.bean.Ranking">
        SELECT v.videoId,
               v.videoPicPath,
               v.videoName,
               u.userId,
               u.userName,
               s.sectorId,
               s.sectorName,
               v.videoViewTimes,
               (
                   SELECT COUNT(*)
                   FROM `Like` l
                   WHERE l.videoId = v.videoId
               ) AS likes,
               (
                   SELECT COUNT(*)
                   FROM `Favorite` f
                   WHERE f.videoId = v.videoId
               ) AS favorites,
               (
                   SELECT COUNT(*)
                   FROM `Danmaku` d
                   WHERE d.videoId = v.videoId
               ) AS danmakus,
               (SELECT likes * 0.3 + favorites * 0.4 + danmakus * 0.2 + v.videoViewTimes * 0.2)
                 AS score

        FROM `Video` v,
             `User` u,
             `Sector` s
        WHERE v.userId = u.userId
          AND v.sectorId = #{sectorId}
          AND s.sectorId = v.sectorId
        ORDER BY score, v.videoId DESC

    </select>

    <select id="getRanking" resultType="com.springboot.eilieili.demo.bean.Ranking">
        SELECT v.videoId,
               v.videoPicPath,
               v.videoName,
               u.userId,
               u.userName,
               s.sectorId,
               s.sectorName,
               v.videoViewTimes,
               (
                   SELECT COUNT(*)
                   FROM `Like` l
                   WHERE l.videoId = v.videoId
               ) AS likes,
               (
                   SELECT COUNT(*)
                   FROM `Favorite` f
                   WHERE f.videoId = v.videoId
               ) AS favorites,
               (
                   SELECT COUNT(*)
                   FROM `Danmaku` d
                   WHERE d.videoId = v.videoId
               ) AS danmakus,
               (SELECT likes * 0.3 + favorites * 0.3 + danmakus * 0.2 + v.videoViewTimes * 0.2)
                 AS score

        FROM `Video` v,
             `User` u,
             `Sector` s
        WHERE v.userId = u.userId
          AND s.sectorId = v.sectorId
        ORDER BY score, v.videoId DESC
    </select>

    <select id="getRankingByIdIndex" resultType="com.springboot.eilieili.demo.bean.Ranking">
        SELECT v.videoId,
               v.videoPicPath,
               v.videoName,
               u.userId,
               u.userName,
               s.sectorId,
               s.sectorName,
               v.videoViewTimes,
               (
                   SELECT COUNT(*)
                   FROM `Like` l
                   WHERE l.videoId = v.videoId
               ) AS likes,
               (
                   SELECT COUNT(*)
                   FROM `Favorite` f
                   WHERE f.videoId = v.videoId
               ) AS favorites,
               (
                   SELECT COUNT(*)
                   FROM `Danmaku` d
                   WHERE d.videoId = v.videoId
               ) AS danmakus,
               (SELECT likes * 0.3 + favorites * 0.4 + danmakus * 0.2 + v.videoViewTimes * 0.2)
                 AS score

        FROM `Video` v,
             `User` u,
             `Sector` s
        WHERE v.userId = u.userId
          AND v.sectorId = #{sectorId}
          AND s.sectorId = v.sectorId
        ORDER BY score, v.videoId DESC
        LIMIT 0,8
    </select>


</mapper>